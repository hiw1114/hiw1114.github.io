[ { "title": "자바스크립트 기초 - 8", "url": "/posts/js-8/", "categories": "git, etc", "tags": "javascript", "date": "2022-03-03 00:00:00 +0900", "snippet": "○boolean불리언(또는 불린)은 숫자, 문자열과 같은 데이터 타입중 하나이다. true와 false, 단 두 가지 값만 존재한다. 참과 거짓 여부를 나타내기 위헤 사용하는 데이터이다.let value;value = true; // 소문자로 써야 합니다.value = false; // 참, 거짓 모두 마찬가지value = False; // 이거 안되고value = True; // 이것도 안 돼요typeof데이터 타입을 체크해주는 연산자." }, { "title": "자바스크립트 기초 - 7", "url": "/posts/js-7/", "categories": "git, etc", "tags": "javascript", "date": "2022-03-02 00:00:00 +0900", "snippet": "○undefined언디파인드(undefined)는 아직 데이터가 정의되지 않았음을 나타낸다.let number;//여기에는 아직 값이 정의되지 않았어! undefined야.(색상변경하기!)//number는 3이라고 정의한 다음 확인하자.(색상변경하기!)number = 3;console.log(number); //3" }, { "title": "자바스크립트 기초 - 6", "url": "/posts/js-6/", "categories": "git, etc", "tags": "javascript", "date": "2022-02-25 00:00:00 +0900", "snippet": "○null널(null)데이터는 ‘없다’를 의미하는 데이터이다. 의도적으로 데이터가 없음을 나타내기 위해 사용하는 일종의 표현 수단이다.let number;//이 변수는 숫자 0 이다!(색상변경하기!)number = 0;//이 변수에는 아무 것도 없다.(색상변경하기!)number = null" }, { "title": "자바스크립트 기초 - 5", "url": "/posts/js-5/", "categories": "git, etc", "tags": "javascript", "date": "2022-02-25 00:00:00 +0900", "snippet": "○연산연산이란 ‘식이 나타낸 일정한 규칙에 따라 계산함’을 뜻한다.사용자는 자바스크립트 코드를 통해 연산을 처리하는 식을 만들 수 있고, 여기에 사용하는 기호를 ‘연산자’라 한다!여기에서 사용해 볼 연산(과 연산자) 산술 연산 대입 연산산술 연산산술 연산은 더하기, 빼기 등 수를 이용한 계산이다.두개의 숫자 데이터를 피연산자로 받아서 하나의 숫자 데이터를 결과로 반환한다.의미 연산자 예제더하기 + 2 + 2 는 4를 반환 빼기 - 5 - 2 는 3을 반환곱하기 * 3 * 2 는 6을 반환나누기 / 1 / 2 는 0.5를 반환나머지 % 12 % 5는 2를 반환연산 결과가 반환된다산술 연산을 처리하는 식을 사용하면, 해당 식은 연산 결과를 반환한다.즉, 식이 데이터로 대체된다!let number = 3 + 3; ↓let number = 6;→ 실제 코드가 바뀌는게 아닌, 실행시에 결과가 반영된다는 뜻!대입연산대입 연산은 오른쪽 피연산자의 데이터를 왼쪽 피연산자에 대입한다. 왼쪽 피연산자로는 주로 변수나 상수가 자리하며, 오른쪽 피연산자로는 데이터 또는 데이터를 반환하는 식이 자리한다.의미 예제 예제풀이대입하기 a = b 값 b를 변수 a에 대입더하여 대입 a += b 변수 a의 값에 b를 더한 결과를 a에 대입빼서 대입 a -= b 변수 a의 값에 b를 뺀 결과를 대입곱하여 대입 a *= b 변수 a의 값에 b를 곱한 결과를 a에 대입나누어 대입 a /= b 변수 a의 값을 b로 나눈 결과를 a에 대입대입 연산자에 산술 연산자 붙여서 사용하는 것을 ‘복합 대입 연산자’ 라고 부른다.연산자 우선순위하나의 구문에 여러 개의 연산자가 함께 사용 되는 경우가 있다.이 경우 연산자 우선순위가 반영되어 우선순위가 높은 것 부터 계산된다. 아래는 주요한 예시들.곱하기, 나누기가 더하기, 빼기보다 우선순위가 높다. (색상변경하기!)1 + 3 * 2 -2;대입 연산은 대입 연산자가 오른쪽에 있는 식보다 무조건 나중에 처리된다.(색상변경하기!)변수 = 1 + 2 + 3;연산자 우선순위에서 밀리지만 먼저 처리하고자 하는 연산이 있는 경우 사용자는 해당 연산 부분을 소괄호로 감싸주어 연산 순서를 바꿀 수 있다.곱하기(*)가 가장 우선순위가 높으나, 실제로는 2-2가 먼저 계산된다.(색상변경하기!)1 + 3 * (2 -2); ↓1 + 3 * 0;" }, { "title": "자바스크립트 기초 - 4", "url": "/posts/js-4/", "categories": "git, etc", "tags": "javascript", "date": "2022-02-24 00:00:00 +0900", "snippet": "○템플릿 리터럴기존의 문자열은 따옴표를 이용해 표현했지만, 템플릿 리터럴은 백틱을 이용해 표현한다.//따옴표를 이용한 기존의 문자열(색상변경하기!)const str1 = ‘작은 따옴표’const str2 = “큰따옴료”//백틱을 이용한 템플릿 리터럴(색상변경하기!)const str3 = 이게 백틱입니다표현식 삽입 방법템플릿 리터럴은 표현식을 내장할 수 있는 문자열 표현법이다.이는 문자열의 내용에 데이터를 삽입한다는 것을 의미한다. 템플릿 리터럴로 표현한 문자열 내부에 플레이스홀더(${})를 기입하고, 그 안에 데이터를 기입하면 데이터는 문자열의 멤버가 된다.예시const data1 = “데이터”const str1 = 문자열 중간에 ${data1} 삽입하기console. log(str1)const data2 = 100const str2 = 숫자도 문자로 녹아든다 : ${data2} !console. log(str2)데이터를 반환하는 메소드 또한 데이터와 마찬가지로 취급할 수 있다.예시const str = 그렇다면 이건 될까? ${prompt(&#39;그렇다면 이건 될까?&#39;)}console.log(str)" }, { "title": "자바스크립트 기초 - 3", "url": "/posts/js-3/", "categories": "git, etc", "tags": "javascript", "date": "2022-02-23 00:00:00 +0900", "snippet": "○상수수식에서 ‘변하기 않는 값’ 을 뜻한다. 변수와 반대되는 것으로, 상수는 ‘단 하나의 데이터만을 위해 사용하는 이름표’ 로써, 값의 변경이 불가하다.상수 만드는 방법const 상수이름 = 데이터;상수도 변수처럼 지정된 데이터 대신 사용할 수 있다.상수 이름 짓기 규칙은 변수 이름 짓기와 동일하다.상수의 선언과 초기화상수를 만들 때는 선언과 동시에 초기화를 해주어야 한다.그러지 않으면 데이터를 지정할 수 없다.상수의 선언과 초기화 따로 하면?(색상변경하기!)const 상수이름;상수이름 = 데이터; // 에러 발생!상수는 자신이 선언될 때 지정된 데이터로 고정된다. 선언 이후데이터를 대입하려고 하면 에러가 발생한다.window.prompt(x)window 객체의 prompt(x) 메소드는 사용자로부터 문자열을 입력 받을 수 있는 다이얼로그 박스를 열어주는 메소드이다. 괄호 안에 x로는 다이얼로그 박스에 띄울 메시지(문자열)를 전달해 줄수 있다.prompt(x)의 문자열 반환prompt(x) 메소드는 실행 시에 사용자로부터 문자열을 입력받고, 입력받은 문자열을 자신이 사용된 곳에 그대로 ‘반환’ 한다. 즉, 메소드가 문자열로 바뀌게 된다.※주의! 실제로 코드가 바뀌는게 아닌 마치 바뀐 것처럼 실행된다는 의미이다!" }, { "title": "자바스크립트 기초 - 2", "url": "/posts/js-2/", "categories": "git, etc", "tags": "javascript", "date": "2022-02-22 00:00:00 +0900", "snippet": "○변수‘데이터에 붙이는 이름표’ 이다. 변수를 이용하면 이름표를 붙여 둔 데이터를 기억해두었다가 필요할 때 마다 재사용 할 수 있게 된다.변수 만드는 방법(색상변경하기!)let 변수이름 = 데이터;변수가 생성되고 나면, 변수(변수이름)를 지정된 데이터 대신 사용 할 수 있다.변수 선언과 초기화(색상변경하기!)변수를 만드는 작업을 ‘변수의 선언’ 이라고 부르고, 변수에 첫 데이터를 지정하는 작업을 ‘번수의 초기화’ 라고 부른다. 두 과정은 동시에 진행 할 수도, 따로 진행 할 수도 있다.변수의 선언과 초기화 따로 하기(색상변경하기!)let 변수이름; // 변수 선언변수 이름 = 데이터; //변수 초기화키워드 let은 ‘변수를 만들겠다’ 라는 의미로 쓰인다.변수는 변한다(색상변경하기!)변수는 데이터를 기억하기 위해 사용한다. 변수는 한변에 하나의 데이터만 기억 할 수 있으며, 기억하고 있는 값을 바꿔가며 사용할 수 있다.변수가 기억하고 있는 데이터를 바꿀 수 있다.(색상변경하기!)let 변수이름 = 데이터1; //변수 선언과 초기화 동시 진행변수 이름 = 데이터2; //새로운 데이터 대입변수이름 = 데이터3; // 새로운 데이터 또 대입변수 이름 정할 때 규칙변수의 이름은 기본적으로 ‘짓는 사람 마음대로’ 지어줄 수 있지만, 몇가지 제약사항도 존재한다.제약사항 변수명에는 오직 문자와 숫자, 그리고 기호’$’, ‘_‘만이 포함될 수 있다. 변수명의 첫 번째 글자로 숫자가 올 수 없다. 이미 다른 뜻을 가지고 있는 단어(키워드)는 변수명으로 사용할 수 없다.근데, 변수에 뭘 기억시켜? 숫자 문자열→ 데이터 유형을 흔히 ‘자료형’ 이라 합니다.숫자정수와 실수로 구분할 수 있다.정수를 기억하는 변수의 예(색상변경하기!)let number1 = 10; //양의 정수let number2 = 0; //0도 정수다let number3 = -10; //음수는 앞에 - 기호 사용실수를 기억하는 변수의 예(색상변경하기!)let number1 = 3.14; //양의 정수let number2 = -3.14; //음의 실수문자열‘기호의 순차 수열’ 을 뜻한다. 문자, 숫자, 특수문자 등 다양한 기호를 조합해 만들 수 있는 ‘기호의 집합’, 따옴표로 시작해 따옴표로 끝나는 데이터이다.작은 따옴표, 큰 따옴표 모두 사용가능(색상변경하기!)let string1 = ‘문자열에는 기호가 들어간다’let string2 = “12345…!?”단, 시작하는 따옴표와 끝나는 따옴표가 같아야 한다." }, { "title": "자바스크립트 공부 시작", "url": "/posts/start/", "categories": "git, etc", "tags": "gitblog, javascript", "date": "2022-02-21 00:00:00 +0900", "snippet": "일이 많아서 집에서도 일을 하다보니 생각보다 공부할 시간이 없어서 해야할 공부도 뒷전이였지만, 미래를 위해서 평일에 무조건 강의 1편은 보자는 마인드로 공부를 시작하려고 한다.“Well begun is half done.” 시작이 반이라는 명언이다. 앞으로 해야 할 공부는 많지만, 조금씩 하다보면 좋은 성과가 있지 않을까 생각한다.깃블로그에는 강의에 나온 내용을 필기해서 올려서 체크 하려고 한다.(만약 문제가 될 경우 말씀해주시면 삭제하도록 하겠습니다.)" }, { "title": "자바스크립트 기초 - 1", "url": "/posts/js-1/", "categories": "git, etc", "tags": "javascript", "date": "2022-02-21 00:00:00 +0900", "snippet": "객체 사용법 객체란 ‘값 또는 기능을 가진 데이터’이다.뒤에 점을 찍으면 값 또는 기능을 사용 할 수 있다.객체. 데이터 ← 객체가 가지고 있는 숫자, 문자등의 다양한 데이터를 사용.객체. 기능() ← 객체가 가지고 있는 다양한 기능을 수행(괄호 필수)주석 //주석 ← 한 줄만 가능/* 주석 */ ← 여러 줄 가능콘솔(console) 브라우저의 디버깅 콘솔콘솔을 브라우저 안에 내장된 브라우저의 하위 객체이므로 브라우저 객체를 통해 접근 할 수 있다.대표적인 메소드console.log ‘x를 기록 해두자’ 라는 기능의 메소드 호출console.clear - log 메소드를 지워주는 메소드                      - ()안에 아무것도 요구 하지 않음." } ]
