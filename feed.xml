<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://hiw1114.github.io//</id><title>inwon</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-03-08T16:46:50+09:00</updated> <author> <name>inwon</name> <uri>https://hiw1114.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://hiw1114.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://hiw1114.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 inwon </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>자바스크립트 기초 - 8</title><link href="https://hiw1114.github.io//posts/js-8/" rel="alternate" type="text/html" title="자바스크립트 기초 - 8" /><published>2022-03-03T00:00:00+09:00</published> <updated>2022-03-03T00:00:00+09:00</updated> <id>https://hiw1114.github.io//posts/js-8/</id> <content src="https://hiw1114.github.io//posts/js-8/" /> <author> <name>inwon</name> </author> <category term="git" /> <category term="etc" /> <summary> ○boolean 불리언(또는 불린)은 숫자, 문자열과 같은 데이터 타입중 하나이다. true와 false, 단 두 가지 값만 존재한다. 참과 거짓 여부를 나타내기 위헤 사용하는 데이터이다. let value; value = true; // 소문자로 써야 합니다. value = false; // 참, 거짓 모두 마찬가지 value = False; // 이거 안되고 value = True; // 이것도 안 돼요 typeof 데이터 타입을 체크해주는 연산자. </summary> </entry> <entry><title>자바스크립트 기초 - 7</title><link href="https://hiw1114.github.io//posts/js-7/" rel="alternate" type="text/html" title="자바스크립트 기초 - 7" /><published>2022-03-02T00:00:00+09:00</published> <updated>2022-03-02T00:00:00+09:00</updated> <id>https://hiw1114.github.io//posts/js-7/</id> <content src="https://hiw1114.github.io//posts/js-7/" /> <author> <name>inwon</name> </author> <category term="git" /> <category term="etc" /> <summary> ○undefined 언디파인드(undefined)는 아직 데이터가 정의되지 않았음을 나타낸다. let number; //여기에는 아직 값이 정의되지 않았어! undefined야.(색상변경하기!) //number는 3이라고 정의한 다음 확인하자.(색상변경하기!) number = 3; console.log(number); //3 </summary> </entry> <entry><title>자바스크립트 기초 - 6</title><link href="https://hiw1114.github.io//posts/js-6/" rel="alternate" type="text/html" title="자바스크립트 기초 - 6" /><published>2022-02-25T00:00:00+09:00</published> <updated>2022-02-25T00:00:00+09:00</updated> <id>https://hiw1114.github.io//posts/js-6/</id> <content src="https://hiw1114.github.io//posts/js-6/" /> <author> <name>inwon</name> </author> <category term="git" /> <category term="etc" /> <summary> ○null 널(null)데이터는 ‘없다’를 의미하는 데이터이다. 의도적으로 데이터가 없음을 나타내기 위해 사용하는 일종의 표현 수단이다. let number; //이 변수는 숫자 0 이다!(색상변경하기!) number = 0; //이 변수에는 아무 것도 없다.(색상변경하기!) number = null </summary> </entry> <entry><title>자바스크립트 기초 - 5</title><link href="https://hiw1114.github.io//posts/js-5/" rel="alternate" type="text/html" title="자바스크립트 기초 - 5" /><published>2022-02-25T00:00:00+09:00</published> <updated>2022-02-25T00:00:00+09:00</updated> <id>https://hiw1114.github.io//posts/js-5/</id> <content src="https://hiw1114.github.io//posts/js-5/" /> <author> <name>inwon</name> </author> <category term="git" /> <category term="etc" /> <summary> ○연산 연산이란 ‘식이 나타낸 일정한 규칙에 따라 계산함’을 뜻한다. 사용자는 자바스크립트 코드를 통해 연산을 처리하는 식을 만들 수 있고, 여기에 사용하는 기호를 ‘연산자’라 한다! 여기에서 사용해 볼 연산(과 연산자) 산술 연산 대입 연산 산술 연산 산술 연산은 더하기, 빼기 등 수를 이용한 계산이다. 두개의 숫자 데이터를 피연산자로 받아서 하나의 숫자 데이터를 결과로 반환한다. 의미 연산자 예제 더하기 + 2 + 2 는 4를 반환 빼기 - 5 - 2 는 3을 반환 곱하기 * 3 * 2 는 6을 반환 나누기 ... </summary> </entry> <entry><title>자바스크립트 기초 - 4</title><link href="https://hiw1114.github.io//posts/js-4/" rel="alternate" type="text/html" title="자바스크립트 기초 - 4" /><published>2022-02-24T00:00:00+09:00</published> <updated>2022-02-25T00:25:53+09:00</updated> <id>https://hiw1114.github.io//posts/js-4/</id> <content src="https://hiw1114.github.io//posts/js-4/" /> <author> <name>inwon</name> </author> <category term="git" /> <category term="etc" /> <summary> ○템플릿 리터럴 기존의 문자열은 따옴표를 이용해 표현했지만, 템플릿 리터럴은 백틱을 이용해 표현한다. //따옴표를 이용한 기존의 문자열(색상변경하기!) const str1 = ‘작은 따옴표’ const str2 = “큰따옴료” //백틱을 이용한 템플릿 리터럴(색상변경하기!) const str3 = 이게 백틱입니다 표현식 삽입 방법 템플릿 리터럴은 표현식을 내장할 수 있는 문자열 표현법이다. 이는 문자열의 내용에 데이터를 삽입한다는 것을 의미한다. 템플릿 리터럴로 표현한 문자열 내부에 플레이스홀더(${})를 기입하고, 그 안에 데이터를 기입하면 데이터는 문자열의 멤버가 된다. 예시 const data1 = “데이터” const str1 = 문자열 중간에 ${data1} 삽입하기 console. log... </summary> </entry> </feed>
